/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
@-webkit-keyframes goForwardDetailEnter {
  from {
    -webkit-transform: translate(0, 100%);
    transform: translate(0, 100%); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }
@keyframes goForwardDetailEnter {
  from {
    -webkit-transform: translate(0, 100%);
    transform: translate(0, 100%); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }

@-webkit-keyframes goForwardDetailLeave {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }

@keyframes goForwardDetailLeave {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }

@-webkit-keyframes goBackDetailEnter {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }

@keyframes goBackDetailEnter {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }

@-webkit-keyframes goBackDetailLeave {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(0, 100%);
    transform: translate(0, 100%); } }

@keyframes goBackDetailLeave {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(0, 100%);
    transform: translate(0, 100%); } }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
@-webkit-keyframes goForwardTabEnter {
  from {
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }
@keyframes goForwardTabEnter {
  from {
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }

@-webkit-keyframes goForwardTabLeave {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(-5%, 0);
    transform: translate(-5%, 0); } }

@keyframes goForwardTabLeave {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(-5%, 0);
    transform: translate(-5%, 0); } }

@-webkit-keyframes goBackTabEnter {
  from {
    -webkit-transform: translate(-5%, 0);
    transform: translate(-5%, 0); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }

@keyframes goBackTabEnter {
  from {
    -webkit-transform: translate(-5%, 0);
    transform: translate(-5%, 0); }
  to {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); } }

@-webkit-keyframes goBackTabLeave {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0); } }

@keyframes goBackTabLeave {
  from {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }
  to {
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0); } }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
@-webkit-keyframes fadeInPages {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }
@keyframes fadeInPages {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@-webkit-keyframes fadeOutPages {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

@keyframes fadeOutPages {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

.pages {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: absolute;
  z-index: 0;
  width: 100%;
  height: 100%; }

/* 
 * PHONE
 *
*/
.go-forward .pages.pages-detail.au-enter:not(.pages-first) {
  -webkit-transform: translate(0, 100%);
  transform: translate(0, 100%);
  z-index: 1; }
  .go-forward .pages.pages-detail.au-enter:not(.pages-first).au-enter-active {
    -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    z-index: 1;
    -webkit-animation: goForwardDetailEnter 0.375s 0ms cubic-bezier(0, 0, 0.2, 1);
    animation: goForwardDetailEnter 0.375s 0ms cubic-bezier(0, 0, 0.2, 1); }

.go-forward .pages.pages-detail.au-leave {
  -webkit-transform: translate(0, 0);
  transform: translate(0, 0);
  z-index: 0; }
  .go-forward .pages.pages-detail.au-leave.au-leave-active {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    z-index: 0;
    -webkit-animation: goForwardDetailLeave 0.375s 0ms cubic-bezier(0.4, 0, 1, 1);
    animation: goForwardDetailLeave 0.375s 0ms cubic-bezier(0.4, 0, 1, 1); }

.go-back .pages.pages-detail.au-enter {
  -webkit-transform: translate(0, 0);
  transform: translate(0, 0);
  z-index: 0; }
  .go-back .pages.pages-detail.au-enter.au-enter-active {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    z-index: 0;
    -webkit-animation: goBackDetailEnter 0.375s 0ms cubic-bezier(0, 0, 0.2, 1);
    animation: goBackDetailEnter 0.375s 0ms cubic-bezier(0, 0, 0.2, 1); }

.go-back .pages.pages-detail.au-leave {
  -webkit-transform: translate(0%, 0);
  transform: translate(0%, 0); }
  .go-back .pages.pages-detail.au-leave.au-leave-active {
    -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    z-index: 1;
    -webkit-animation: goBackDetailLeave 0.375s 0ms cubic-bezier(0.4, 0, 1, 1);
    animation: goBackDetailLeave 0.375s 0ms cubic-bezier(0.4, 0, 1, 1); }

.go-forward .pages.pages-fade.au-enter:not(.pages-first) {
  opacity: 0 !important; }
  .go-forward .pages.pages-fade.au-enter:not(.pages-first).au-enter-active {
    -webkit-animation: fadeInPages 0.487s 0ms cubic-bezier(0, 0, 0.2, 1);
    animation: fadeInPages 0.487s 0ms cubic-bezier(0, 0, 0.2, 1); }

.go-forward .pages.pages-fade.au-leave.au-leave-active {
  -webkit-animation: fadeOutPages 0.487s 0ms cubic-bezier(0.4, 0, 1, 1);
  animation: fadeOutPages 0.487s 0ms cubic-bezier(0.4, 0, 1, 1); }

.go-back .pages.pages-fade.au-enter {
  opacity: 0 !important; }
  .go-back .pages.pages-fade.au-enter.au-enter-active {
    -webkit-animation: fadeInPages 0.487s 0ms cubic-bezier(0, 0, 0.2, 1);
    animation: fadeInPages 0.487s 0ms cubic-bezier(0, 0, 0.2, 1); }

.go-back .pages.pages-fade.au-leave.au-leave-active {
  -webkit-animation: fadeOutPages 0.487s 0ms cubic-bezier(0.4, 0, 1, 1);
  animation: fadeOutPages 0.487s 0ms cubic-bezier(0.4, 0, 1, 1); }

.go-forward .pages.pages-tab.au-enter:not(.pages-first) {
  -webkit-transform: translate(100%, 0);
  transform: translate(100%, 0);
  z-index: 1; }
  .go-forward .pages.pages-tab.au-enter:not(.pages-first).au-enter-active {
    -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    z-index: 1;
    -webkit-animation: goForwardTabEnter 0.375s 0ms cubic-bezier(0, 0, 0.2, 1);
    animation: goForwardTabEnter 0.375s 0ms cubic-bezier(0, 0, 0.2, 1); }

.go-forward .pages.pages-tab.au-leave {
  -webkit-transform: translate(0, 0);
  transform: translate(0, 0);
  z-index: 0; }
  .go-forward .pages.pages-tab.au-leave.au-leave-active {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    z-index: 0;
    -webkit-animation: goForwardTabLeave 0.375s 0ms cubic-bezier(0.4, 0, 1, 1);
    animation: goForwardTabLeave 0.375s 0ms cubic-bezier(0.4, 0, 1, 1); }

.go-back .pages.pages-tab.au-enter {
  -webkit-transform: translate(-5%, 0);
  transform: translate(-5%, 0);
  z-index: 0; }
  .go-back .pages.pages-tab.au-enter.au-enter-active {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    z-index: 0;
    -webkit-animation: goBackTabEnter 0.375s 0ms cubic-bezier(0, 0, 0.2, 1);
    animation: goBackTabEnter 0.375s 0ms cubic-bezier(0, 0, 0.2, 1); }

.go-back .pages.pages-tab.au-leave {
  -webkit-transform: translate(0%, 0);
  transform: translate(0%, 0); }
  .go-back .pages.pages-tab.au-leave.au-leave-active {
    -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    z-index: 1;
    -webkit-animation: goBackTabLeave 0.375s 0ms cubic-bezier(0.4, 0, 1, 1);
    animation: goBackTabLeave 0.375s 0ms cubic-bezier(0.4, 0, 1, 1); }

/* 
 * TABLET
 *
*/
@media (min-width: 480px) and (max-width: 839px) {
  .go-forward .pages.pages-detail.au-enter:not(.pages-first) {
    -webkit-transform: translate(0, 100%);
    transform: translate(0, 100%);
    z-index: 1; }
    .go-forward .pages.pages-detail.au-enter:not(.pages-first).au-enter-active {
      -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      z-index: 1;
      -webkit-animation: goForwardDetailEnter 0.487s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: goForwardDetailEnter 0.487s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-forward .pages.pages-detail.au-leave {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
    z-index: 0; }
    .go-forward .pages.pages-detail.au-leave.au-leave-active {
      -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      z-index: 0;
      -webkit-animation: goForwardDetailLeave 0.487s 0ms cubic-bezier(0.4, 0, 1, 1);
      animation: goForwardDetailLeave 0.487s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-back .pages.pages-detail.au-enter {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
    z-index: 0; }
    .go-back .pages.pages-detail.au-enter.au-enter-active {
      -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      z-index: 0;
      -webkit-animation: goBackDetailEnter 0.487s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: goBackDetailEnter 0.487s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-back .pages.pages-detail.au-leave {
    -webkit-transform: translate(0%, 0);
    transform: translate(0%, 0); }
    .go-back .pages.pages-detail.au-leave.au-leave-active {
      -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      z-index: 1;
      -webkit-animation: goBackDetailLeave 0.487s 0ms cubic-bezier(0.4, 0, 1, 1);
      animation: goBackDetailLeave 0.487s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-forward .pages.pages-fade.au-enter:not(.pages-first) {
    opacity: 0 !important; }
    .go-forward .pages.pages-fade.au-enter:not(.pages-first).au-enter-active {
      -webkit-animation: fadeInPages 0.599s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: fadeInPages 0.599s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-forward .pages.pages-fade.au-leave.au-leave-active {
    -webkit-animation: fadeOutPages 0.599s 0ms cubic-bezier(0.4, 0, 1, 1);
    animation: fadeOutPages 0.599s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-back .pages.pages-fade.au-enter {
    opacity: 0 !important; }
    .go-back .pages.pages-fade.au-enter.au-enter-active {
      -webkit-animation: fadeInPages 0.599s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: fadeInPages 0.599s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-back .pages.pages-fade.au-leave.au-leave-active {
    -webkit-animation: fadeOutPages 0.599s 0ms cubic-bezier(0.4, 0, 1, 1);
    animation: fadeOutPages 0.599s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-forward .pages.pages-tab.au-enter:not(.pages-first) {
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0);
    z-index: 1; }
    .go-forward .pages.pages-tab.au-enter:not(.pages-first).au-enter-active {
      -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      z-index: 1;
      -webkit-animation: goForwardTabEnter 0.487s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: goForwardTabEnter 0.487s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-forward .pages.pages-tab.au-leave {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
    z-index: 0; }
    .go-forward .pages.pages-tab.au-leave.au-leave-active {
      -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      z-index: 0;
      -webkit-animation: goForwardTabLeave 0.487s 0ms cubic-bezier(0.4, 0, 1, 1);
      animation: goForwardTabLeave 0.487s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-back .pages.pages-tab.au-enter {
    -webkit-transform: translate(-5%, 0);
    transform: translate(-5%, 0);
    z-index: 0; }
    .go-back .pages.pages-tab.au-enter.au-enter-active {
      -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      z-index: 0;
      -webkit-animation: goBackTabEnter 0.487s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: goBackTabEnter 0.487s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-back .pages.pages-tab.au-leave {
    -webkit-transform: translate(0%, 0);
    transform: translate(0%, 0); }
    .go-back .pages.pages-tab.au-leave.au-leave-active {
      -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      z-index: 1;
      -webkit-animation: goBackTabLeave 0.487s 0ms cubic-bezier(0.4, 0, 1, 1);
      animation: goBackTabLeave 0.487s 0ms cubic-bezier(0.4, 0, 1, 1); } }

/* 
 * DESKTOP
 *
*/
@media (min-width: 840px) {
  .go-forward .pages.pages-detail.au-enter:not(.pages-first) {
    -webkit-transform: translate(0, 100%);
    transform: translate(0, 100%);
    z-index: 1; }
    .go-forward .pages.pages-detail.au-enter:not(.pages-first).au-enter-active {
      -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      z-index: 1;
      -webkit-animation: goForwardDetailEnter 0.15s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: goForwardDetailEnter 0.15s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-forward .pages.pages-detail.au-leave {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
    z-index: 0; }
    .go-forward .pages.pages-detail.au-leave.au-leave-active {
      -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      z-index: 0;
      -webkit-animation: goForwardDetailLeave 0.15s 0ms cubic-bezier(0.4, 0, 1, 1);
      animation: goForwardDetailLeave 0.15s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-back .pages.pages-detail.au-enter {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
    z-index: 0; }
    .go-back .pages.pages-detail.au-enter.au-enter-active {
      -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      z-index: 0;
      -webkit-animation: goBackDetailEnter 0.15s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: goBackDetailEnter 0.15s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-back .pages.pages-detail.au-leave {
    -webkit-transform: translate(0%, 0);
    transform: translate(0%, 0); }
    .go-back .pages.pages-detail.au-leave.au-leave-active {
      -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      z-index: 1;
      -webkit-animation: goBackDetailLeave 0.15s 0ms cubic-bezier(0.4, 0, 1, 1);
      animation: goBackDetailLeave 0.15s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-forward .pages.pages-fade.au-enter:not(.pages-first) {
    opacity: 0 !important; }
    .go-forward .pages.pages-fade.au-enter:not(.pages-first).au-enter-active {
      -webkit-animation: fadeInPages 0.375s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: fadeInPages 0.375s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-forward .pages.pages-fade.au-leave.au-leave-active {
    -webkit-animation: fadeOutPages 0.375s 0ms cubic-bezier(0.4, 0, 1, 1);
    animation: fadeOutPages 0.375s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-back .pages.pages-fade.au-enter {
    opacity: 0 !important; }
    .go-back .pages.pages-fade.au-enter.au-enter-active {
      -webkit-animation: fadeInPages 0.375s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: fadeInPages 0.375s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-back .pages.pages-fade.au-leave.au-leave-active {
    -webkit-animation: fadeOutPages 0.375s 0ms cubic-bezier(0.4, 0, 1, 1);
    animation: fadeOutPages 0.375s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-forward .pages.pages-tab.au-enter:not(.pages-first) {
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0);
    z-index: 1; }
    .go-forward .pages.pages-tab.au-enter:not(.pages-first).au-enter-active {
      -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      z-index: 1;
      -webkit-animation: goForwardTabEnter 0.15s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: goForwardTabEnter 0.15s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-forward .pages.pages-tab.au-leave {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
    z-index: 0; }
    .go-forward .pages.pages-tab.au-leave.au-leave-active {
      -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      z-index: 0;
      -webkit-animation: goForwardTabLeave 0.15s 0ms cubic-bezier(0.4, 0, 1, 1);
      animation: goForwardTabLeave 0.15s 0ms cubic-bezier(0.4, 0, 1, 1); }
  .go-back .pages.pages-tab.au-enter {
    -webkit-transform: translate(-5%, 0);
    transform: translate(-5%, 0);
    z-index: 0; }
    .go-back .pages.pages-tab.au-enter.au-enter-active {
      -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
      z-index: 0;
      -webkit-animation: goBackTabEnter 0.15s 0ms cubic-bezier(0, 0, 0.2, 1);
      animation: goBackTabEnter 0.15s 0ms cubic-bezier(0, 0, 0.2, 1); }
  .go-back .pages.pages-tab.au-leave {
    -webkit-transform: translate(0%, 0);
    transform: translate(0%, 0); }
    .go-back .pages.pages-tab.au-leave.au-leave-active {
      -webkit-box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
      z-index: 1;
      -webkit-animation: goBackTabLeave 0.15s 0ms cubic-bezier(0.4, 0, 1, 1);
      animation: goBackTabLeave 0.15s 0ms cubic-bezier(0.4, 0, 1, 1); } }
